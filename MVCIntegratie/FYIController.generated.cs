// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace MVCIntegratie.Controllers
{
    public partial class FYIController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public FYIController() { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected FYIController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Over()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Over);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult FAQ()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.FAQ);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Contact()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Contact);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public FYIController Actions { get { return MVC.FYI; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "FYI";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "FYI";
        [GeneratedCode("T4MVC", "2.0")]
        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Over = "Over";
            public readonly string FAQ = "FAQ";
            public readonly string Contact = "Contact";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Over = "Over";
            public const string FAQ = "FAQ";
            public const string Contact = "Contact";
        }


        static readonly ActionParamsClass_Over s_params_Over = new ActionParamsClass_Over();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Over OverParams { get { return s_params_Over; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Over
        {
            public readonly string language = "language";
        }
        static readonly ActionParamsClass_FAQ s_params_FAQ = new ActionParamsClass_FAQ();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_FAQ FAQParams { get { return s_params_FAQ; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_FAQ
        {
            public readonly string language = "language";
        }
        static readonly ActionParamsClass_Contact s_params_Contact = new ActionParamsClass_Contact();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Contact ContactParams { get { return s_params_Contact; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Contact
        {
            public readonly string language = "language";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string Contact = "Contact";
                public readonly string FAQ = "FAQ";
                public readonly string Over = "Over";
            }
            public readonly string Contact = "~/Views/FYI/Contact.cshtml";
            public readonly string FAQ = "~/Views/FYI/FAQ.cshtml";
            public readonly string Over = "~/Views/FYI/Over.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_FYIController : MVCIntegratie.Controllers.FYIController
    {
        public T4MVC_FYIController() : base(Dummy.Instance) { }

        [NonAction]
        partial void OverOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string language);

        [NonAction]
        public override System.Web.Mvc.ActionResult Over(string language)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Over);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "language", language);
            OverOverride(callInfo, language);
            return callInfo;
        }

        [NonAction]
        partial void FAQOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string language);

        [NonAction]
        public override System.Web.Mvc.ActionResult FAQ(string language)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.FAQ);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "language", language);
            FAQOverride(callInfo, language);
            return callInfo;
        }

        [NonAction]
        partial void ContactOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string language);

        [NonAction]
        public override System.Web.Mvc.ActionResult Contact(string language)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Contact);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "language", language);
            ContactOverride(callInfo, language);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
